# -*- coding: utf-8 -*-
"""Chp_deployment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rys7oYK7I9D1LJhebNcOuS-70cMKO4C3
"""

!pip install -q pyngrok

!pip install -q streamlit

!pip install -q streamlit_ace

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
#  
# import pickle
# import streamlit as st
#  
# # loading the trained model
# pickle_in = open('/content/chennai_model (1).pickle', 'rb') 
# regressor = pickle.load(pickle_in)
#  
# @st.cache()
# 
# def prediction(Area, Sqft, Bedroom, Bathroom, Room, Sale_condition, Park, 
#                Available_Utility, Street, Zone, Age, BUILDTYPE_Commercial, BUILDTYPE_House, BUILDTYPE_Others):   
#  
#     # Pre-processing user input    
#     if Area == "Karapakkam":
#         Area = 0
#     elif Area == 'Adyar':
#         Area = 1
#     elif Area == 'Chrompet':
#         Area = 2
#     elif Area == 'Velachery':
#         Area = 3
#     elif Area == 'KK Nagar':
#         Area = 4
#     elif Area == 'Anna Nagar':
#         Area = 5
#     elif Area == 'T Nagar':
#         Area = 6
#      
#  
#     if Sale_condition == "Partial":
#         Sale_condition = 0
#     elif Sale_condition == "Family":
#         Sale_condition = 1
#     elif Sale_condition == "AbNormal":
#         Sale_condition = 2
#     elif Sale_condition == "Normal Sale":
#         Sale_condition = 3
#     elif Sale_condition == "AdjLand":
#         Sale_condition = 4
# 
#     if Park == "Yes":
#         Park = 0
#     else:
#         Park = 1
# 
#     if Available_Utility == 'ELO':
#         Available_Utility = 0
#     elif Available_Utility == "NoSewr":
#         Available_Utility = 1
#     elif Available_Utility == "AllPub":
#         Available_Utility = 2
# 
#     if Street == 'No Access':
#         Street = 0
#     elif Street == 'Paved':
#         Street = 1
#     elif Street == 'Gravel':
#         Street = 2
#     
#     if Zone == 'A':
#         Zone = 0
#     elif Zone == 'C':
#         Zone = 1
#     elif Zone == 'I':
#         Zone = 2
#     elif Zone == 'RH':
#         Zone = 3
#     elif Zone == 'RL':
#         Zone = 4
#     elif Zone == 'RM':
#         Zone = 5
# 
#     if BUILDTYPE_Commercial == "Yes":
#         BUILDTYPE_Commercial = 1
#     else:
#         BUILDTYPE_Commercial = 0
# 
#     if BUILDTYPE_House == "Yes":
#         BUILDTYPE_House = 1
#     else:
#         BUILDTYPE_House = 0
# 
#     if BUILDTYPE_Others == "Yes":
#         BUILDTYPE_Others = 1
#     else:
#         BUILDTYPE_Others = 0  
#  
#     
#  
#     # Making predictions 
#     prediction = regressor.predict( 
#         [[Area, Sqft, Bedroom, Bathroom, Room, Sale_condition, Park, 
#                Available_Utility, Street, Zone, Age, BUILDTYPE_Commercial, BUILDTYPE_House, BUILDTYPE_Others]])
#      
#     
#     return prediction
#       
#   
# # this is the main function in which we define our webpage  
# def main():       
#     # front end elements of the web page 
#     html_temp = """ 
#     <div style ="background-color:#e84343;padding:13px"> 
#     <h1 style ="color:black;text-align:center;">Chennai House Price Prediction ML App</h1> 
#     </div> 
#     """
# 
#     # display the front end aspect
#     st.markdown(html_temp, unsafe_allow_html = True) 
#     st.markdown("<h3 style='text-align: center; color: Black;'>Give your reqiurements we will do the rest.</h3>", unsafe_allow_html=True)
#     st.sidebar.header("What is this Project about?")
#     st.sidebar.text("It a Web app that would help the user in finding the prices of houses in chennai region.")
# 
#     # following lines create boxes in which user can enter data required to make prediction 
#     left_1, right_1 = st.columns(2)
#     Area = left_1.selectbox('Pick an area',('Karapakkam','Adyar','Chrompet','Velachery','KK Nagar','Anna Nagar','T Nagar'))
#     Sqft = right_1.number_input("Total Area in SQFT")
#     l1, m1  = st.columns(2)
#     Bedroom = l1.slider("Number of Bedrooms",1,4)
#     Bathroom = m1.slider("Number of Bathrooms",1,2)
#     Room = st.slider("Number of Rooms",1,6)
#     left_2, middle_2, right_2 = st.columns(3)
#     Sale_condition = left_2.selectbox('Sale Condition',('Partial','Family','AbNormal','Normal Sale','AdjLand')) 
#     Park = right_2.radio('Whether park facility is required or not?',('Yes','No'))
#     Available_Utility = middle_2.selectbox('Utility Available',('ELO','NoSewr','AllPub'))
#     left_3, right_3 = st.columns(2)
#     Street = left_3.selectbox('Nature of Street',('No Access','Paved','Gravel'))
#     Zone = right_3.selectbox('Chennai Zone Code',('A','C','I','RH','RL','RM')) 
#     Age = st.slider("Age of the Building",0,60)
#     BUILDTYPE_Commercial = st.radio('Whether Build type is Commercial?',('Yes','No'))
#     if BUILDTYPE_Commercial == 'Yes':
#       BUILDTYPE_House = 'No'
#       BUILDTYPE_Others = 'No'
#     else:
#       BUILDTYPE_House = st.radio('Whether Build type is House?',('Yes','No'))
#       if BUILDTYPE_House == 'Yes':
#         BUILDTYPE_Others = 'No'
#       else:
#         BUILDTYPE_Others = st.radio('If Build type is any other select Yes else No',('Yes','No'))
#    
#     result =""
#       
#     # when 'Predict' is clicked, make the prediction and store it 
#     if st.button("Predict"): 
#         result = prediction(Area, Sqft, Bedroom, Bathroom, Room, Sale_condition, Park, 
#                Available_Utility, Street, Zone, Age, BUILDTYPE_Commercial, BUILDTYPE_House, BUILDTYPE_Others) 
#         updated_res = result.flatten().astype(int)
#         st.success('Your Predicted Home Price in Chennai is Rs. {}'.format(updated_res))
#         
#      
# if __name__=='__main__': 
#     main()

!ngrok authtoken 28jTBiaYUmTpNQHFoSLusD5hiXx_5ADWcYKFM9LFykwEvV4cM

!nohup streamlit run app.py &

from pyngrok import ngrok 
url = ngrok.connect(port = 8501)
url

!streamlit run --server.port 80 app.py >/dev/null